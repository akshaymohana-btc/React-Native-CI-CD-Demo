name: Build and Deploy android build (develop branch)

on:
  push:
    branches:
      - develop

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
#     - name: Set up our JDK environment # setup JDK environment: mandatory as we need to build  android project
#       uses: actions/setup-java@v1.4.3
#       with:
#         java-version: 1.8
        
    - name: Install node dependencies
      uses: actions/setup-node@v3
      with:
        node-version: 16
    - run: npm i
          
    - name: Cache Gradle Wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-
    
    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew
      
    - name: Build Android App Bundle
      run: |
          ls
          cd android && ./gradlew assembleRelease --no-daemon
    
    - name: Sign App Bundle
      id: sign_app
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: android/app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_SIGNING_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_SIGNING_STORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: Signed App Bundle
        path: ${{steps.sign_app.outputs.signedReleaseFile}}
        
    - name: Distribute app via Firebase App Distribution
      uses: wzieba/Firebase-Distribution-Github-Action@v1
      with:
        appId: ${{secrets.FIREBASE_APP_ID}}
        serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
        file: ${{steps.sign_app.outputs.signedReleaseFile}}
        

    
